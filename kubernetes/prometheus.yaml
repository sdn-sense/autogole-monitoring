---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - k8s-igrok-01.calit2.optiputer.net
                - k8s-igrok-02.calit2.optiputer.net
                - k8s-igrok-03.calit2.optiputer.net
                - k8s-igrok-04.calit2.optiputer.net
                - k8s-igrok-05.calit2.optiputer.net
                - k8s-igrok-06.calit2.optiputer.net
      containers:
      - name: prometheus
        image: prom/prometheus
        args:
          - '--storage.tsdb.retention.time=360d'
          - '--storage.tsdb.path=/prometheus'
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--web.config.file=/etc/web.yml'
        resources:
          limits:
            cpu: 4
            memory: 8Gi
          requests:
            cpu: 4
            memory: 6Gi
        ports:
        - name: http-prometheus
          containerPort: 9090
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - mountPath: /etc/prometheus/alerts.yml
          name: prometheus-alerts
          subPath: alerts.yml
        - name: prometheus-storage-volume
          mountPath: /prometheus
        - mountPath: /etc/tls/tls.crt
          name: grafana-tls
          subPath: tls.crt
          readOnly: true
        - mountPath: /etc/tls/tls.key
          name: grafana-tls
          subPath: tls.key
          readOnly: true
        - mountPath: /etc/web.yml
          name: prometheus-web-yml
          readOnly: true
          subPath: web.yml
      - name: alertmanager
        image: prom/alertmanager
        resources:
          limits:
            cpu: 2
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        args:
          - --config.file=/etc/alertmanager/alertmanager.yml
          - --storage.path=/alertmanager
        ports:
          - name: alertmanager
            containerPort: 9093
        volumeMounts:
          - name: alertmanager-config
            mountPath: /etc/alertmanager
          - name: alertmanager-storage
            mountPath: /alertmanager
      - name: thanos-federate-proxy
        image: ghcr.io/snapp-incubator/thanos-federate-proxy:main
        resources:
          limits:
            cpu: 4
            memory: 2Gi
          requests:
            cpu: 2
            memory: 2Gi
        args:
          - -insecure-listen-address=0.0.0.0:9099
          - -upstream=https://thanos.nrp-nautilus.io
          - -tlsSkipVerify
        ports:
          - containerPort: 9099
            name: fedproxy
            protocol: TCP
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/prometheus
      restartPolicy: Always
      volumes:
      - name: prometheus-config-volume
        configMap:
          defaultMode: 420
          name: prometheus-config
      - name: prometheus-alerts
        configMap:
          defaultMode: 420
          name: prometheus-alerts
      - name: alertmanager-config
        configMap:
          defaultMode: 420
          name: alertmanager-config
      - name: grafana-tls
        secret:
          secretName: autogole-grafana-secrets
          defaultMode: 0644
      - name: prometheus-web-yml
        secret:
          secretName: autogole-monitoring
          items:
          - key: prometheus-web-yml
            path: web.yml
          defaultMode: 0644
      - name: prometheus-storage-volume
        persistentVolumeClaim:
            claimName: prometheus-pvc
      - name: alertmanager-storage
        persistentVolumeClaim:
          claimName: alertmanager-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
spec:
  ports:
    - port: 9090
      protocol: TCP
      targetPort: http-prometheus
  selector:
    app: prometheus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-federate-proxy-service
  labels:
    app: thanos-federate-proxy
spec:
  ports:
    - port: 9099
      targetPort: fedproxy
      protocol: TCP
  selector:
    app: prometheus
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: haproxy
  name: autogole-prometheus-ingress
spec:
  rules:
  - host: autogole-prometheus.nrp-nautilus.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
  tls:
  - hosts:
    - autogole-prometheus.nrp-nautilus.io
    secretName: cert-autogole-prometheus-nrp-nautilus-io
